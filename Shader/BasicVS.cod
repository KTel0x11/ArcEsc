//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64
//   float4 lightDirection;             // Offset:   64 Size:    16 [unused]
//   float4 lightColor;                 // Offset:   80 Size:    16 [unused]
//   float4 cameraPosition;             // Offset:   96 Size:    16 [unused]
//
// }
//
// cbuffer CbSkeleton
// {
//
//   row_major float4x4 boneTransforms[256];// Offset:    0 Size: 16384
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbSkeleton                        cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// BONE_WEIGHTS             0   xyzw        1     NONE   float   xyzw
// BONE_INDICES             0   xyzw        2     NONE    uint   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB1[1024], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyzw
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_temps 5
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   v1.x <- boneWeights.x; v1.y <- boneWeights.y; v1.z <- boneWeights.z; v1.w <- boneWeights.w; 
//   v2.x <- boneIndices.x; v2.y <- boneIndices.y; v2.z <- boneIndices.z; v2.w <- boneIndices.w; 
//   v3.x <- texcoord.x; v3.y <- texcoord.y; 
//   o1.x <- <main return value>.texcoord.x; o1.y <- <main return value>.texcoord.y; 
//   o0.x <- <main return value>.vertex.x; o0.y <- <main return value>.vertex.y; o0.z <- <main return value>.vertex.z; o0.w <- <main return value>.vertex.w
//
#line 12 "C:\Users\2230201\Desktop\授業\ゲーム制作\ゲームプログラミングⅢ・ⅣEE칿E\ゲームプログラミングⅢ・Ⅳ\HLSL\BasicVS.hlsl"
nop 
mov r0.xyzw, v0.xyzw

#line 8 "C:\Users\2230201\Desktop\授業\ゲーム制作\ゲームプログラミングⅢ・Ⅳ（配布）\ゲームプログラミングⅢ・Ⅳ\HLSL\Skinning.hlsli"
itof r1.xyzw, l(0, 0, 0, 0)  // r1.x <- p.x; r1.y <- p.y; r1.z <- p.z; r1.w <- p.w

#line 13
imul null, r2.x, v2.x, l(4)
mul r3.xyzw, r0.xxxx, cb1[r2.x + 0].xyzw
mul r4.xyzw, r0.yyyy, cb1[r2.x + 1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r0.zzzz, cb1[r2.x + 2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r2.xyzw, r0.wwww, cb1[r2.x + 3].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r2.xyzw, r2.xyzw, v1.xxxx
add r1.xyzw, r1.xyzw, r2.xyzw
imul null, r2.x, v2.y, l(4)
mul r3.xyzw, r0.xxxx, cb1[r2.x + 0].xyzw
mul r4.xyzw, r0.yyyy, cb1[r2.x + 1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r0.zzzz, cb1[r2.x + 2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r2.xyzw, r0.wwww, cb1[r2.x + 3].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r2.xyzw, r2.xyzw, v1.yyyy
add r1.xyzw, r1.xyzw, r2.xyzw
imul null, r2.x, v2.z, l(4)
mul r3.xyzw, r0.xxxx, cb1[r2.x + 0].xyzw
mul r4.xyzw, r0.yyyy, cb1[r2.x + 1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r0.zzzz, cb1[r2.x + 2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r2.xyzw, r0.wwww, cb1[r2.x + 3].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r2.xyzw, r2.xyzw, v1.zzzz
add r1.xyzw, r1.xyzw, r2.xyzw
imul null, r2.x, v2.w, l(4)
mul r3.xyzw, r0.xxxx, cb1[r2.x + 0].xyzw
mul r4.xyzw, r0.yyyy, cb1[r2.x + 1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r0.zzzz, cb1[r2.x + 2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r0.xyzw, r0.wwww, cb1[r2.x + 3].xyzw
add r0.xyzw, r0.xyzw, r3.xyzw
mul r0.xyzw, r0.xyzw, v1.wwww
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- p.x; r0.y <- p.y; r0.z <- p.z; r0.w <- p.w

#line 15
mov r0.xyzw, r0.xyzw  // r0.x <- <SkinningPosition return value>.x; r0.y <- <SkinningPosition return value>.y; r0.z <- <SkinningPosition return value>.z; r0.w <- <SkinningPosition return value>.w

#line 12 "C:\Users\2230201\Desktop\授業\ゲーム制作\ゲームプログラミングⅢ・ⅣEE뤈E\ゲームプログラミングⅢ・Ⅳ\HLSL\BasicVS.hlsl"
mov r0.xyzw, r0.xyzw  // r0.x <- position.x; r0.y <- position.y; r0.z <- position.z; r0.w <- position.w

#line 13
mul r1.xyzw, r0.xxxx, cb0[0].xyzw
mul r2.xyzw, r0.yyyy, cb0[1].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.zzzz, cb0[2].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, r0.wwww, cb0[3].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- vout.vertex.x; r0.y <- vout.vertex.y; r0.z <- vout.vertex.z; r0.w <- vout.vertex.w

#line 14
mov r1.xy, v3.xyxx  // r1.x <- vout.texcoord.x; r1.y <- vout.texcoord.y

#line 16
mov o0.xyzw, r0.xyzw
mov o1.xy, r1.xyxx
ret 
// Approximately 56 instruction slots used
