//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuseMapSamplerState            sampler      NA          NA             s0      1 
// diffuseMap                        texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_output o0.xyzw
dcl_temps 2
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   v2.x <- pin.color.x; v2.y <- pin.color.y; v2.z <- pin.color.z; v2.w <- pin.color.w; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 10 "C:\Users\2230201\Desktop\授業\ゲーム制作\ゲームプログラミングⅢ・ⅣEE"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0
mul r0.xyzw, r0.xyzw, l(1.300000, 1.300000, 1.300000, 1.300000)  // r0.x <- texColor.x; r0.y <- texColor.y; r0.z <- texColor.z; r0.w <- texColor.w

#line 12
mul r0.xyz, r0.xyzx, v2.xyzx  // r0.x <- baseColor.x; r0.y <- baseColor.y; r0.z <- baseColor.z

#line 15
dp3 r1.x, r0.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)  // r1.x <- intensity

#line 17
mul r1.x, r1.x, l(1.500000)

#line 20
lt r1.y, l(0.800000), r1.x
if_nz r1.y

#line 21
  mov r1.y, l(1.000000)  // r1.y <- intensity
else   // Prior locations: r1.x <- intensity

#line 22
  lt r1.z, l(0.600000), r1.x
  if_nz r1.z

#line 23
    mov r1.y, l(0.800000)  // r1.y <- intensity
  else   // Prior locations: r1.x <- intensity

#line 24
    lt r1.x, l(0.400000), r1.x
    if_nz r1.x

#line 25
      mov r1.y, l(0.600000)  // r1.y <- intensity
    else 

#line 27
      mov r1.y, l(0.100000)  // r1.y <- intensity
    endif 
  endif 
endif 

#line 30
mul o0.xyz, r0.xyzx, r1.yyyy
mul o0.w, r0.w, v2.w
ret 
// Approximately 24 instruction slots used
